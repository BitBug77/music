# Generated by Django 5.1.5 on 2025-03-12 08:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EsewaPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference_id', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SUCCESS', 'Success'), ('FAILED', 'Failed')], default='PENDING', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spotify_id', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('artist', models.CharField(max_length=255)),
                ('album', models.CharField(max_length=255)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('genre', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_score', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.song')),
            ],
        ),
        migrations.CreateModel(
            name='PlaylistSong',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlist_songs', to='app.playlist')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.song')),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('like', 'Like'), ('save', 'Save'), ('play', 'Play'), ('skip', 'Skip'), ('view', 'View'), ('share', 'Share'), ('complete', 'Complete'), ('search', 'Search')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('search_query', models.CharField(blank=True, max_length=255, null=True)),
                ('search_type', models.CharField(blank=True, max_length=20, null=True)),
                ('context', models.CharField(blank=True, max_length=50, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('song', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='song_actions', to='app.song')),
            ],
        ),
        migrations.CreateModel(
            name='UserMusic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spotify_track_id', models.CharField(max_length=100)),
                ('track_name', models.CharField(max_length=255)),
                ('artist_name', models.CharField(max_length=255)),
                ('album_name', models.CharField(blank=True, max_length=255, null=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('pronoun', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('spotify_id', models.CharField(blank=True, max_length=100, null=True)),
                ('preferences', models.JSONField(blank=True, default=dict)),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSimilarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity_score', models.FloatField()),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarities_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarities_user2', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='playlist',
            index=models.Index(fields=['user'], name='app_playlis_user_id_12a229_idx'),
        ),
        migrations.AddIndex(
            model_name='playlistsong',
            index=models.Index(fields=['playlist'], name='app_playlis_playlis_c26b07_idx'),
        ),
        migrations.AddIndex(
            model_name='playlistsong',
            index=models.Index(fields=['song'], name='app_playlis_song_id_007138_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='playlistsong',
            unique_together={('playlist', 'song')},
        ),
        migrations.AddIndex(
            model_name='action',
            index=models.Index(fields=['user', 'song', 'action_type'], name='app_action_user_id_5f7a4a_idx'),
        ),
        migrations.AddIndex(
            model_name='action',
            index=models.Index(fields=['user', 'action_type'], name='app_action_user_id_9d9f22_idx'),
        ),
        migrations.AddIndex(
            model_name='action',
            index=models.Index(fields=['song', 'action_type'], name='app_action_song_id_975a17_idx'),
        ),
        migrations.AddIndex(
            model_name='action',
            index=models.Index(fields=['timestamp'], name='app_action_timesta_5c6884_idx'),
        ),
        migrations.AddIndex(
            model_name='action',
            index=models.Index(fields=['search_query'], name='app_action_search__3abecd_idx'),
        ),
        migrations.AddIndex(
            model_name='action',
            index=models.Index(fields=['search_type'], name='app_action_search__fedd36_idx'),
        ),
        migrations.AddConstraint(
            model_name='action',
            constraint=models.UniqueConstraint(condition=models.Q(('action_type', 'search'), _negated=True), fields=('user', 'song', 'action_type'), name='unique_non_search_action'),
        ),
        migrations.AlterUniqueTogether(
            name='usermusic',
            unique_together={('user', 'spotify_track_id')},
        ),
    ]
